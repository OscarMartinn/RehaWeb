# Generated by Django 3.2.9 on 2022-04-03 09:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('englishAccess', '0002_auto_20220403_0846'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new age range', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Age',
                'verbose_name_plural': 'Ages',
            },
        ),
        migrations.CreateModel(
            name='AssessmentPatiens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=30, verbose_name='Paciente')),
                ('exercise', models.CharField(max_length=30, verbose_name='Momento del día')),
                ('val1', models.IntegerField(help_text='¿Te ha parecido claro el ejercicio? [0 poco claro y 5 muy claro]', verbose_name='Pregunta 1')),
                ('val2', models.IntegerField(help_text='¿Te ha parecido difícil el ejercicio? [0 poco difícil y 5 muy fácil]', verbose_name='Pregunta 2')),
                ('val3', models.IntegerField(help_text='¿Te ha parecido útil el ejercicio para tus objetivos? [0 poco útil y 5 muy útil]', verbose_name='Pregunta 3')),
                ('val4', models.IntegerField(help_text='¿Has sentido algún tipo de dolor? [0 nada y 5 muchísimo]', verbose_name='Pregunta 4')),
                ('val5', models.CharField(help_text='¿Te gustaría repetir el ejercicio en un futuro?', max_length=4, verbose_name='Pregunta 5')),
                ('date', models.CharField(max_length=30, verbose_name='Fecha')),
                ('session', models.IntegerField(default=0, verbose_name='ID Sesión')),
            ],
            options={
                'verbose_name': 'Evaluation of the exercises',
                'verbose_name_plural': 'Evaluations of the exercises',
            },
        ),
        migrations.CreateModel(
            name='Classifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new functional mobility classification level [1-6,C and N]', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Classification',
                'verbose_name_plural': 'Classifications',
            },
        ),
        migrations.CreateModel(
            name='Exercices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Indique el código del ejercicio.', max_length=8, verbose_name='Código')),
                ('name', models.CharField(help_text='Indique un nombre para el nuevo ejercicio.', max_length=60, verbose_name='Nombre del Ejercicio')),
                ('description', models.TextField(blank=True, help_text='Si lo desea, añade una descripción explicativo.', max_length=500, null=True, verbose_name='Descripción')),
                ('video', models.FileField(blank=True, help_text='Seleccione el video que quieres asociar al ejercicio. Con el siguiente formato: codigo_ejercicio.mp4', null=True, upload_to='ejercicios', verbose_name='Video')),
                ('visible', models.BooleanField(default=True, help_text='Cuando quieras dejar oculto un Ejercicio, desmarca la casilla', verbose_name='Sin ocultar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('age', models.ManyToManyField(help_text='Seleccione los rangos de edad para este ejercicio.', to='englishAccess.Ages', verbose_name='Rangos de Edad')),
                ('diagnostic', models.ManyToManyField(help_text='Seleccione los diagnósticos asociadosa a este ejercicio.', to='englishAccess.Diagnostics', verbose_name='Diagnostico')),
            ],
            options={
                'verbose_name': 'Exercise',
                'verbose_name_plural': 'Exercises',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ExercisesDone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise', models.CharField(max_length=80, verbose_name='Ejercicio')),
                ('date', models.CharField(max_length=30, verbose_name='Fecha de realización')),
                ('session', models.IntegerField(default=0, verbose_name='ID Sesión')),
            ],
            options={
                'verbose_name': 'Exercise done in the session',
                'verbose_name_plural': 'Exercises done in the session',
            },
        ),
        migrations.CreateModel(
            name='Extremities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new extremity', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Extremity',
                'verbose_name_plural': 'Extremities',
            },
        ),
        migrations.CreateModel(
            name='GmfcsEnglish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new level of gross motor function', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'GMFCS',
                'verbose_name_plural': 'GMFCS',
            },
        ),
        migrations.CreateModel(
            name='Laterality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new laterality name.', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Laterality',
                'verbose_name_plural': 'Laterality',
            },
        ),
        migrations.CreateModel(
            name='MacsEnglish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new level of manual skill.', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'MACS',
                'verbose_name_plural': 'MACS',
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Indique el nombre completo del paciente.', max_length=80, verbose_name='Nombre')),
                ('lastnames', models.CharField(help_text='Indique los apellidos del paciente.', max_length=60, verbose_name='Apellidos')),
                ('birthDate', models.DateField(verbose_name='Fecha de nacimiento')),
                ('email', models.EmailField(help_text='Correo electróncio.', max_length=30, verbose_name='Email')),
                ('phone', models.CharField(help_text='Número de teléfono.', max_length=10, verbose_name='Telefono')),
                ('username', models.CharField(help_text='Indique el usuario que desea asignar al paciente.(Longitud mínima 5 caracteres [a-z, 0-9 y guiones bajos]', max_length=30, verbose_name='Usuario del BOT')),
                ('password', models.CharField(help_text='Indique la contraseña que se usará en las funciones del bot.', max_length=15, verbose_name='Contraseña del BOT')),
                ('visible', models.BooleanField(default=True, help_text='Cuando quieras dejar oculto un Paciente, desmarca la casilla', verbose_name='Sin ocultar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('classification5', models.ForeignKey(help_text='Indica la calificacion FMS5 para una distacia de 5 metros', on_delete=django.db.models.deletion.CASCADE, related_name='calificacion_cinco', to='englishAccess.classifications', verbose_name='FMS5 - Clasificación')),
                ('classification50', models.ForeignKey(help_text='Indica la calificacion FMS50 para una distacia de 50 metros', on_delete=django.db.models.deletion.CASCADE, related_name='calificacion_cincuenta', to='englishAccess.classifications', verbose_name='FMS50 - Clasificación')),
                ('classification500', models.ForeignKey(help_text='Indica la calificacion FMS500 para una distacia de 500 metros', on_delete=django.db.models.deletion.CASCADE, related_name='calificacion_quinientos', to='englishAccess.classifications', verbose_name='FMS500 - Clasificación')),
                ('diagnostic', models.ForeignKey(help_text='Seleccione el diagnostico de este paciente.', on_delete=django.db.models.deletion.CASCADE, to='englishAccess.diagnostics', verbose_name='Diagnóstico')),
                ('gmfcs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='englishAccess.gmfcsenglish', verbose_name='GMFCS')),
                ('macs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='englishAccess.macsenglish', verbose_name='MACS')),
                ('therapist', models.ForeignKey(help_text='Seleccione el terapeuta de este paciente.', on_delete=django.db.models.deletion.CASCADE, to='englishAccess.therapists', verbose_name='Terapeuta')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PciEnglish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new PCI', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PCI',
                'verbose_name_plural': 'PCI',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Add a new position', max_length=40, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
            },
        ),
        migrations.CreateModel(
            name='RegistrationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initialDate', models.CharField(max_length=30, verbose_name='Fecha de inicio')),
                ('finalDate', models.CharField(max_length=30, verbose_name='Fecha de finalización')),
                ('session', models.IntegerField(default=0, verbose_name='ID Sesión')),
                ('comment', models.CharField(default='sin comentario', max_length=100, verbose_name='Comentarios')),
            ],
            options={
                'verbose_name': 'Session Registration',
                'verbose_name_plural': 'Session Registrations',
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicidad', models.IntegerField(default=1, help_text='Indique las veces que puede realizar el paciente esta sesión a lo largo de la semana.', verbose_name='Periodicidad')),
                ('initialDate', models.DateField(verbose_name='Fecha de Inicio')),
                ('finalDate', models.DateField(verbose_name='Fecha de Final')),
                ('visible', models.BooleanField(default=True, help_text='Cuando quieras dejar oculto una Sesión, desmarca la casilla', verbose_name='Sin ocultar')),
                ('sended', models.BooleanField(default=False, help_text='Si la casilla no se encuentra marcada, las sesion no ha sido programada', verbose_name='Enviado')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TherapeuticObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Add a new therapeutic objective', max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('actupdatedualizado', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Therapeutic Objective',
                'verbose_name_plural': 'Therapeutic Objectives',
            },
        ),
        migrations.CreateModel(
            name='SessionsExercices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reps', models.SmallIntegerField(default=1, verbose_name='Repeticiones')),
                ('exercices', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='englishAccess.exercices', verbose_name='Ejercicios')),
                ('sessions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='englishAccess.sessions', verbose_name='Sesiones')),
            ],
            options={
                'verbose_name': 'Session Exercise',
                'verbose_name_plural': 'Session Exercises',
            },
        ),
        migrations.AddField(
            model_name='sessions',
            name='exercises',
            field=models.ManyToManyField(help_text='Seleccione los ejercicios para esta sesión.', through='englishAccess.SessionsExercices', to='englishAccess.Exercices', verbose_name='Ejercicios'),
        ),
        migrations.AddField(
            model_name='sessions',
            name='patient',
            field=models.ForeignKey(help_text='Selecciona al paciente asigando para esta sesión.', on_delete=django.db.models.deletion.CASCADE, to='englishAccess.patients', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='sessions',
            name='therapist',
            field=models.ForeignKey(help_text='Seleccione el terapeuta de esta sesión.', on_delete=django.db.models.deletion.CASCADE, to='englishAccess.therapists', verbose_name='Terapeuta'),
        ),
        migrations.CreateModel(
            name='PatientForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=100, verbose_name='Día preferido')),
                ('moment', models.CharField(max_length=30, verbose_name='Momento del día')),
                ('hours', models.CharField(max_length=120, verbose_name='Horario preferido')),
                ('patient', models.ForeignKey(blank=True, help_text='Seleccione el paciente', null=True, on_delete=django.db.models.deletion.CASCADE, to='englishAccess.patients', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
        migrations.AddField(
            model_name='exercices',
            name='extremities',
            field=models.ManyToManyField(help_text='Seleccione las extremidades involucradas eneste ejercicio.', to='englishAccess.Extremities', verbose_name='Extremidades'),
        ),
        migrations.AddField(
            model_name='exercices',
            name='laterality',
            field=models.ForeignKey(help_text='Seleccione la lateralidad de este ejercicio.', on_delete=django.db.models.deletion.CASCADE, to='englishAccess.laterality', verbose_name='Lateralidad'),
        ),
        migrations.AddField(
            model_name='exercices',
            name='pci',
            field=models.ManyToManyField(to='englishAccess.PciEnglish', verbose_name='PCI'),
        ),
        migrations.AddField(
            model_name='exercices',
            name='position',
            field=models.ManyToManyField(help_text='Seleccione la posicion asociada a este ejercicio.', to='englishAccess.Position', verbose_name='Posición'),
        ),
        migrations.AddField(
            model_name='exercices',
            name='therapeuticObjective',
            field=models.ManyToManyField(help_text='Selecciona los objetivos terapéuticos asociados este ejercicio.', to='englishAccess.TherapeuticObjective', verbose_name='Objetivos Terapéuticos'),
        ),
    ]
